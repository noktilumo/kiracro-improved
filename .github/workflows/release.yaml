name: release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install poetry
        uses: abatilo/actions-poetry@v4
      - name: Setup virtualenv
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Build Linux Executable
        run: poetry run pyinstaller -w -F -y -n kiracro-improved-x86_64 src/kiracro_improved/main.py
      - name: Build and Upload
        run: poetry build
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: linux-build
          path: ./dist/

  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    - name: Install Poetry
      uses: abatilo/actions-poetry@v4
    - name: Setup virtualenv
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      with:
        path: .\.venv
        key: win-venv-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: poetry install
    - name: Build Windows Executable
      run: poetry run pyinstaller -w -F -y -n kiracro-improved-windows-x64.exe src/kiracro_improved/main.py
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: windows-build
        path: ./dist/


  release:
    needs: [linux-build, windows-build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-assets
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release-assets/**/*
